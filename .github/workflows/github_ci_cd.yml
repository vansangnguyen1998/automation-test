on:
  push:
    branches:
      - master

jobs:
  build-test-deploy:
     runs-on: ubuntu-latest
     steps:
       - name: Checkout source
         uses: actions/checkout@v2
       - name: Setup node
         uses: actions/setup-node@v2
         with:
          node-version: '12'
       - name: Install dependency packages for Server
         run: npm --prefix ./Server install
       - name: Install dependency packages for Test
         run: npm --prefix ./Test install
       - name: Run server
         run: (npm --prefix ./Server start&)
       - name: Run test
         run: npm --prefix ./Test run test
       - name: Login to GCR
         uses: docker/login-action@v1
         with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}
       - name: Build and push docker image
         #uses: docker/build-push-action@v2
        #  with:
        #   context: .
        #   file: ./Server/Dockerfile
        #   tags: gcr.io/dotted-signer-316607/demo-ci-cd/automation-test:${{ github.sha }}
        #   push: true
         run: |
          docker build -t gcr.io/dotted-signer-316607/demo-ci-cd/automation-test:${{ github.sha }} -f ./Server/Dockerfile .
          docker push gcr.io/dotted-signer-316607/demo-ci-cd/automation-test:${{ github.sha }}
       - name: Login to gcloud
         uses: google-github-actions/setup-gcloud@master
         with:
          project_id: 'dotted-signer-316607'
          service_account_key: ${{ secrets.GCR_JSON_KEY }}
          export_default_credentials: true
       - name: Connect to k8s cluster
         run: |
          gcloud container clusters get-credentials cluster-1 --zone asia-southeast1-b --project dotted-signer-316607
       - name: Deploy new version
         env: 
          NAMESPACE: default
          KUBE_DEPLOYMENT: automation-test
          KUBE_CONTAINER: automation-test-sha-1
          DEPLOY_TARGET: gcr.io/dotted-signer-316607/demo-ci-cd/automation-test:${{ github.sha }}
         run: |
          kubectl set image -n $NAMESPACE deployment $KUBE_DEPLOYMENT $KUBE_CONTAINER=$DEPLOY_TARGET